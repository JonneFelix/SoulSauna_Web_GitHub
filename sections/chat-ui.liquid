<!-- chat-ui.liquid -->
<div
  id="chat-container"
  data-profile-pic-url="https://cdn.shopify.com/s/files/1/0819/3094/4843/t/3/assets/Finn_robot.webp?v=1712743606"
>
  <!-- Header improved with a better visual hierarchy -->
  <div id="chat-header">
    <img
      src="https://cdn.shopify.com/s/files/1/0819/3094/4843/t/3/assets/Finn_robot.webp?v=1712743606"
      class="profile-pic"
      alt="Chat with Finn"
    >
    <span id="chat-title">FINN DER SAUNAFLÜSTERER STEHT DIR GERNE ZU VERFÜGUNG </span>
  </div>
  <div id="chat-messages" role="log" aria-live="polite">
    <!-- Nachrichten werden hier über JavaScript eingefügt -->
  </div>
  <!-- Input container improved for better usability -->
  <div id="chat-input-container">
    <textarea
      id="chat-input"
      aria-label="Schreiben Sie eine Nachricht"
      placeholder="Schreiben Sie eine Nachricht..."
      onkeypress="checkForEnter(event)"
    ></textarea>
    <button id="chat-send" aria-label="Nachricht senden" onclick="sendMessage()">
      <span class="send-icon">⇨</span>
      <!-- Added span for better control over the icon -->
    </button>
  </div>
</div>

<!-- Styles für die Chat-UI -->
<style>
         #chat-input {
          height: 50px; /* Höhe des Texteingabefelds fixieren */
          resize: none; /* Verhindert, dass Benutzer die Größe des Felds ändern */
        }

          #chat-send {
            width: 40px; /* Leicht größere Button-Größe für bessere Touch-Zielgröße */
            height: 40px;
            right: 5px;
            bottom: 10px; /* Zusätzlicher Abstand zum Boden */
            display: flex; /* Erlaubt zentrierte Items im Button */
            align-items: center; /* Zentriert den Pfeil vertikal */
            justify-content: center; /* Zentriert den Pfeil horizontal */
            padding: 10px; /* Gleiche Padding-Größe für alle Seiten */
          }
        }

        #chat-container {
        width: 100%; /* Vollständige Breite innerhalb des umschließenden Elements */
        max-width: 800px; /* Maximalbreite für größere Bildschirme anpassen */
        height: 600px; /* Feste Höhe des Chat-Fensters */
        margin: 20px auto; /* Zentriert den Container mit Abstand oben und unten */
        display: flex;
        flex-direction: column;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        overflow: hidden;
        min-height: 500px; /* Mindesthöhe für das Chat-Fenster */
        max-height: 80vh; /* Maximalhöhe basierend auf dem Viewport */
      }

        /* Stil des Nachrichtenbereichs */
    #chat-messages {
      flex-grow: 1; /* Nimmt verfügbaren Platz ein */
      overflow-y: auto; /* Ermöglicht das Scrollen */
      margin: 15px 0; /* Abstand oben und unten */
      margin-bottom: 10px; /* Abstand nach unten für Übersichtlichkeit */
    }

        /* Stil des Kopfbereichs */
    #chat-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 15px;
      background-color: #C19A6B;
      color: white;
    }

        /* Stil für das Profilbild */
    .profile-pic {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      margin-right: 10px;
    }

        #chat-input:focus {
          border-color: #C19A6B; /* Highlight the input when focused */
        }

        /* Added animations for chat messages */
        @keyframes slideIn {
          from {
            opacity: 0;
            transform: translateY(10px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }

        .chat-message {
          max-width: calc(100% - 50px); /* Maximale Breite der Nachrichtenblasen */
          word-wrap: break-word; /* Stellt sicher, dass lange Wörter umgebrochen werden */
          animation: slideIn 0.3s ease-out; /* New message animation */
        }

        #chat-send:hover {
      background-color: #a85d4b;
    }

        .chat-message.incoming {
          justify-content: flex-start;
          background-color: #f0f0f0;
        }

        .chat-message.outgoing {
          justify-content: flex-end;
          background-color: #d1eaff;
        }

        /* Stil für Eingabebereich */
    #chat-input-container {
      display: flex;
      padding: 10px;
      border-top: 1px solid #eaeaea; /* Trennlinie */
      padding: 10px;
    }

        /* Stil für das Eingabefeld */
    #chat-input {
      flex: 1; /* Erlaubt es dem Eingabefeld, den verfügbaren Platz auszufüllen */
      padding: 10px;
      border-radius: 4px; /* Leichte Rundung der Ecken */
      flex-grow: 1;
      border: 1px solid #C19A6B; /* Farbe des Headers für die Umrandung */
      margin-right: 10px; /* Abstand zwischen Eingabefeld und Senden-Button */
    }

        /* Stil für den Senden-Button */
    #chat-send {
      background-color: #C19A6B;
      color: white;
      border: none;
      border-radius: 4px; /* Leichte Rundung der Ecken */
      padding: 10px 15px;
      cursor: pointer;
    }

        /* Improved quick reply styles */
        .quick-replies {
          display: flex;
          justify-content: space-around;
          padding: 10px;
        }

        .quick-reply-button {
          background-color: #C19A6B;
          color: white;
          border: none;
          border-radius: 20px;
          padding: 5px 10px;
          cursor: pointer;
          margin: 0 5px;
        }

        .quick-reply-button:hover {
          background-color: #a85d4b;
        }

        /* Added styles for the send icon for better scalability */
        .send-icon {
          display: block;
          width: 100%;
          height: 100%;
          text-align: center;
          line-height: normal; /* Entfernt den Einfluss der Zeilenhöhe */
        }


  @media (max-width: 600px) {
    #chat-container {
      min-height: 400px; /* Angepasste Mindesthöhe auf kleineren Bildschirmen */
      max-height: 70vh; /* Angepasste Maximalhöhe auf kleineren Bildschirmen */
    }

    #chat-send {
      padding: 8px; /* Angepasster Padding im Button auf kleineren Bildschirmen */
    }
  }
</style>

<!-- JavaScript, um die Nachrichten zu verwalten und mit dem Backend zu kommunizieren -->
<script>
function typeMessage(fullText, type) {
  let index = 0;
  let container = document.getElementById('chat-messages');
  let messageDiv = document.createElement('div');
  messageDiv.classList.add('chat-message', type);

  // Füge das Profilbild nur zu eingehenden Nachrichten hinzu
  if (type === 'incoming') {
    const profilePicUrl = document.getElementById('chat-container').getAttribute('data-profile-pic-url');
    messageDiv.innerHTML = `<img src="${profilePicUrl}" class="profile-pic">`;
  }

  container.appendChild(messageDiv);
  const textSpan = document.createElement('span');
  messageDiv.appendChild(textSpan);

  function typeStep() {
    if (index < fullText.length) {
      textSpan.textContent += fullText[index];
      index++;
      setTimeout(typeStep, 20);
    }
  }
  
  typeStep();
}
  
function displayMessage(text, type) {
  const messagesContainer = document.getElementById('chat-messages');
  const messageDiv = document.createElement('div');
  messageDiv.classList.add('chat-message', type);
  
  // Setze die Nachricht direkt in das Nachrichten-Div
  messageDiv.innerHTML = type === 'incoming' ? 
    `<img src="${document.getElementById('chat-container').getAttribute('data-profile-pic-url')}" class="profile-pic">${text}` : text;

  messagesContainer.scrollTop = messagesContainer.scrollHeight; // Ändern zu:
  messagesContainer.scrollIntoView({ behavior: 'smooth', block: 'end' });
}



// sendMessage-Funktion, die Typewriter-Effekt für ausgehende Nachrichten verwendet
function sendMessage() {
  var input = document.getElementById('chat-input');
  var message = input.value.trim();
  var sendButton = document.getElementById('chat-send');

  // Visual feedback for sending message
  sendButton.disabled = true; // Disable send button to prevent multiple sends
  sendButton.classList.add('sending');
  
  if (message) {
    displayMessage(message, 'outgoing');
    input.value = ''; // Clear the input field
    
    fetch('/sendMessage', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({message: message}),
    })
    .then(response => response.json())
    .then(data => {
      // Nach Erhalt der Antwort, zeige diese mit Typewriter-Effekt an
      typeMessage(data.answer, 'incoming');
    })
    .catch((error) => {
      console.error('Error:', error);
    });
  }else {
    // Re-enable send button if the message is empty
    sendButton.disabled = false;
  }
}

// Additional JavaScript to handle animation end and re-enable send button
document.getElementById('chat-send').addEventListener('animationend', function() {
  this.classList.remove('sending');
  this.disabled = false;
});

// onLoad, add a function to handle loading and error states
window.onload = function() {
  // Show loading state when waiting for a message
  // Hide loading state and show message or error accordingly
};

// EventListener für das Senden bei Eingabe von Enter
function checkForEnter(event) {
  if (event.keyCode === 13) {
    event.preventDefault(); // Verhindert einen Zeilenumbruch
    sendMessage();
  }
}

// Eventuell kannst du hier eine Logik hinzufügen, um "Schnelle Antworten" zu implementieren
function addQuickReplies(options) {
  const container = document.getElementById('chat-messages');
  const repliesDiv = document.createElement('div');
  repliesDiv.classList.add('quick-replies');

  options.forEach(option => {
    const button = document.createElement('button');
    button.textContent = option.label;
    button.onclick = function() { sendMessage(option.message); };
    repliesDiv.appendChild(button);
  });

  container.appendChild(repliesDiv);
}

document.getElementById('chat-send').addEventListener('click', sendMessage);

// Zeige eine Begrüßungsnachricht beim Laden der Seite an
setTimeout(function() {
  typeMessage("Hallo, ich bin Finn, der Saunaflüsterer. Wofür brauchst du eine Sauna und wie stellst du sie dir vor?", 'incoming');
}, 3000);
</script>

<!-- chat-ui.liquid -->
<div
  id="chat-container"
  data-profile-pic-url="https://cdn.shopify.com/s/files/1/0819/3094/4843/t/3/assets/Finn_robot.webp?v=1712743606"
>
  <!-- Header improved with a better visual hierarchy -->
  <div id="chat-header">
    <img
      src="https://cdn.shopify.com/s/files/1/0819/3094/4843/t/3/assets/Finn_robot.webp?v=1712743606"
      class="profile-pic"
      alt="Chat with Finn"
    >
    <span id="chat-title">FINN DER SAUNAFLÜSTERER STEHT DIR GERNE ZU VERFÜGUNG </span>
  </div>
  <div id="chat-messages" role="log" aria-live="polite">
    <!-- Nachrichten werden hier über JavaScript eingefügt -->
  </div>
  <!-- Input container improved for better usability -->
  <div id="chat-input-container">
    <textarea
      id="chat-input"
      aria-label="Schreiben Sie eine Nachricht"
      placeholder="Schreiben Sie eine Nachricht..."
      onkeypress="checkForEnter(event)"
    ></textarea>
    <button id="chat-send" aria-label="Nachricht senden" onclick="sendMessage()">
      <span class="send-icon">⇨</span>
      <!-- Added span for better control over the icon -->
    </button>
  </div>
</div>

<!-- Styles für die Chat-UI -->
<style>
  /* Stil des Nachrichtenbereichs */
  #chat-messages {
  flex-grow: 1; /* Erlaubt dem Nachrichtenbereich, den verfügbaren Platz zu füllen */
  overflow-y: auto; /* Ermöglicht das Scrollen innerhalb des Nachrichtenbereichs */
  margin: 15px 0; /* Abstand oben und unten im Nachrichtenbereich */
  }

  /* Stil für Eingabebereich */
  #chat-input-container {
    display: flex;
    align-items: center; /* Zentriert die Elemente vertikal */
    padding: 0 10px; /* Fügt links und rechts Padding hinzu */
    border-top: 1px solid #C19A6B;
    position: relative;
  }

  /* Stil für das Eingabefeld */
  #chat-input {
    flex-grow: 1;
    padding: 10px;
    margin: 0;
    border: 1px solid #C19A6B;
    border-radius: 4px 0 0 4px;
    border-right: none;
    font-family: Arial, sans-serif;
    font-size: 1.6rem;
    box-shadow: inset 0 0 5px rgba(0,0,0,0.2); /* Fügt einen inneren Schatten hinzu */
    resize: none; /* Verhindert, dass Benutzer die Größe des Felds ändern */
  }

  #chat-send {
    padding: 10px 15px;
    background-color: #C19A6B;
    color: white;
    border: none;
    border-radius: 0 4px 4px 0;
    cursor: pointer;
    /* Entfernt die absolute Positionierung und setzt es auf flex-item */
    flex: none; /* Verhindert, dass der Button flexibel skaliert */
    align-self: stretch; /* Streckt den Button, um die volle Höhe des Containers zu füllen */
  }

  /* Added styles for the send icon for better scalability */
  .send-icon {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #chat-container {
  width: 100%; /* Vollständige Breite innerhalb des umschließenden Elements */
  max-width: 1200px; /* Maximalbreite für größere Bildschirme anpassen */
  height: 600px; /* Feste Höhe des Chat-Fensters */
  margin: 20px auto; /* Zentriert den Container mit Abstand oben und unten */
  display: flex;
  flex-direction: column;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  background-color: #fff;
  overflow: hidden;
  min-height: 500px; /* Mindesthöhe für das Chat-Fenster */
  max-height: 80vh; /* Maximalhöhe basierend auf dem Viewport */
  }



  /* Stil des Kopfbereichs */
  #chat-header {
  display: flex;
  align-items: center;
  padding: 15px;
  background-color: #C19A6B;
  color: white;
  justify-content: flex-start; /* Ändert die Ausrichtung auf Anfang */
  }

            #chat-title {
            /* Verschiebt den Titeltext nach links */
            flex-grow: 1;
            text-align: left;
            margin-left: 10px; /* Abstand zum Profilbild */
          }

                     /* Stil für das Profilbild */
                 .profile-pic {
                   width: 40px;
                   height: 40px;
                   border-radius: 50%;
                   margin-right: 10px; /* Abstand zwischen Profilbild und Name */
                 }

                     #chat-input:focus {
                       border-color: #C19A6B; /* Highlight the input when focused */
                     }

                     /* Added animations for chat messages */
                     @keyframes slideIn {
                       from {
                         opacity: 0;
                         transform: translateY(10px);
                       }
                       to {
                         opacity: 1;
                         transform: translateY(0);
                       }
                     }

                     .chat-message {
                       max-width: calc(100% - 50px); /* Maximale Breite der Nachrichtenblasen */
                       word-wrap: break-word; /* Stellt sicher, dass lange Wörter umgebrochen werden */
                       animation: slideIn 0.3s ease-out; /* New message animation */
                       display: flex;
                       align-items: center;
                       margin-bottom: 10px; /* Abstand zwischen Nachrichten */
                       padding: 10px; /* Polsterung innerhalb der Nachrichtenblase */
                       border-radius: 8px; /* Abgerundete Ecken für Nachrichtenblasen */
                     }

                     #chat-send:hover {
                   background-color: #a85d4b;
                 }

                     .chat-message.incoming {
                       flex-direction: row; /* Profilbild auf der linken Seite */
                       background-color: white;
                       color; #103948; /* Text */
                     }

                     .chat-message.outgoing {
                       flex-direction: row; /* Profilbild auf der linken Seite */
                       background-color: white;
                       color: #103948; /* Text */
                     }


        .sender-name {
          margin-right: 10px; /* Abstand zwischen Name und Nachrichtentext */
          font-weight: bold;
        }


                     /* Stil für den Senden-Button */
                 #chat-send {
                   background-color: #C19A6B;
                   color: white;
                   border: none;
                   border-radius: 6px; /* Leichte Rundung der Ecken */
                   padding: 10px 15px;
                   cursor: pointer;
                 }

                     /* Improved quick reply styles */
                     .quick-replies {
                       display: flex;
                       justify-content: space-around;
                       padding: 10px;
                     }

                     .quick-reply-button {
                       background-color: #C19A6B;
                       color: white;
                       border: none;
                       border-radius: 20px;
                       padding: 5px 10px;
                       cursor: pointer;
                       margin: 0 5px;
                     }

                     .quick-reply-button:hover {
                       background-color: #a85d4b;
                     }


              @media (max-width: 600px) {
              #chat-container {
                /* Anpassungen für die Höhe auf kleineren Geräten */
                max-height: 70vh;
              }
            }

      /* Container für den Nachrichteninhalt, um Profilbild, Name und Text zu umfassen */
      .message-content {
        display: flex;
        align-items: center;
      }

      .message-text {
         flex-grow: 1; /* Lässt den Text den verfügbaren Raum ausfüllen */
      }
</style>

<!-- JavaScript, um die Nachrichten zu verwalten und mit dem Backend zu kommunizieren -->
<script>
function typeMessage(fullText, type) {
  let index = 0;
  let container = document.getElementById('chat-messages');
  let messageDiv = document.createElement('div');
  messageDiv.classList.add('chat-message', type);

  // Füge das Profilbild nur zu eingehenden Nachrichten hinzu
  if (type === 'incoming') {
    const profilePicUrl = document.getElementById('chat-container').getAttribute('data-profile-pic-url');
    messageDiv.innerHTML = `
      <img src="${profilePicUrl}" class="profile-pic">
      <span class="sender-name">Finn</span>
    `;
    const textSpan = document.createElement('span');
    textSpan.classList.add('message-text');
    messageDiv.appendChild(textSpan);
    container.appendChild(messageDiv);

    // Tippeffekt für die Nachricht
    function typeStep() {
      if (index < fullText.length) {
        textSpan.textContent += fullText[index++];
        setTimeout(typeStep, 20);
      }
    }
    typeStep();
  }
}

  
function displayMessage(text, type) {
  var messagesContainer = document.getElementById('chat-messages');
  var messageDiv = document.createElement('div');
  messageDiv.classList.add('chat-message', type);

  if (type === 'incoming') {
    const profilePicUrl = document.getElementById('chat-container').getAttribute('data-profile-pic-url');
    messageDiv.innerHTML = `
      <img src="${profilePicUrl}" class="profile-pic">
      <span class="sender-name">Finn</span>
      <span class="message-text">${text}</span>
    `;
  } else {
    messageDiv.textContent = text;
  }

  messagesContainer.appendChild(messageDiv);
  messagesContainer.scrollTop = messagesContainer.scrollHeight; // Scrollt zum neuesten Nachrichtenelement
}




// sendMessage-Funktion, die Typewriter-Effekt für ausgehende Nachrichten verwendet
function sendMessage() {
  var input = document.getElementById('chat-input');
  var message = input.value.trim();
  
  if (message) {
    displayMessage(message, 'outgoing');
    input.value = ''; // Löscht das Eingabefeld
    
    // Hier könnten Sie Ihre Logik zum Senden der Nachricht an Ihren Server hinzufügen
    // Nachdem Sie eine Antwort vom Server erhalten haben:
    displayMessage('Antwort vom Server', 'incoming'); // Beispielantwort
  }
}

// Additional JavaScript to handle animation end and re-enable send button
document.getElementById('chat-send').addEventListener('animationend', function() {
  this.classList.remove('sending');
  this.disabled = false;
});

// onLoad, add a function to handle loading and error states
window.onload = function() {
  // Show loading state when waiting for a message
  // Hide loading state and show message or error accordingly
};

// EventListener für das Senden bei Eingabe von Enter
function checkForEnter(event) {
  if (event.keyCode === 13) {
    event.preventDefault(); // Verhindert einen Zeilenumbruch
    sendMessage();
  }
}

// Eventuell kannst du hier eine Logik hinzufügen, um "Schnelle Antworten" zu implementieren
function addQuickReplies(options) {
  const container = document.getElementById('chat-messages');
  const repliesDiv = document.createElement('div');
  repliesDiv.classList.add('quick-replies');

  options.forEach(option => {
    const button = document.createElement('button');
    button.textContent = option.label;
    button.onclick = function() { sendMessage(option.message); };
    repliesDiv.appendChild(button);
  });

  container.appendChild(repliesDiv);
}

document.getElementById('chat-send').addEventListener('click', sendMessage);

// Zeige eine Begrüßungsnachricht beim Laden der Seite an
setTimeout(function() {
  typeMessage("Hallo, ich bin Finn, der Saunaflüsterer. Wofür brauchst du eine Sauna und wie stellst du sie dir vor?", 'incoming');
}, 3000);
</script>
